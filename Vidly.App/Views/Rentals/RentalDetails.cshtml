@model Vidly.App.ViewModels.RentalDetailsViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--List of Rented Movies-->

<div>
    <div>
        @Html.ActionLink("Back", "Index", "Rentals", null, new { @class = "btn btn-default" })
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>@Model.Customer.Name's Rented Movies</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="form-group">
                <button class="btn btn-primary" id="return">Return All</button>
            </div>
            <table id="rented" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Movie</th>
                        <th>Genre</th>
                        <th>Rating</th>
                        <th></th>
                    </tr>
                </thead>
            </table>

        </div>
    </div>
</div>

<!--List of Returned Movies-->

<div>
    <div class="row">
        <div class="col-md-12">
            <h2>List of Return Movies</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <table id="history" class="table table-bordered table-hover" width="100%">
                <thead>
                    <tr>
                        <th>Movie</th>
                        <th>Genre</th>
                        <th>Rating</th>
                        <th>Date Rented</th>
                        <th>Date Returned</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<input type="hidden" id="rentalId" value="@Model.RentalId" />

@section scripts{
    <script>
        $(document).ready(function () {
            const rentalId = $("#rentalId").val();

            let vm = { movieIds: [] }
            vm.rentalId = rentalId;

            var rentedTable = $("#rented").DataTable({

                ajax: {
                    url: "/api/rented",
                    data: {
                        id: rentalId
                    },
                    dataSrc: "",
                },
                columns: [
                    {
                        data: "movie.name"
                    },
                    {
                        data: "movie.genre.name"
                    },
                    {
                        data: "movie.rating",
                        render: function (data, type, movie) {
                            let star = "<span class='fa fa-star text-star'>";
                            if (data !== 0) {
                                return star.repeat(data);
                            } else {
                                return ""
                            }
                        }
                    }, {
                        data: "movie.id",
                        render: function (data, type, movie) {
                            return "<button class='btn-link js-return' data-movie-id=" + data + ">Return</button>";
                        }
                    }
                ]
            });

            var historyTable = $("#history").DataTable({

                ajax: {
                    url: "/api/returns",
                    data: {
                        id: rentalId
                    },
                    dataSrc: "",
                },
                columns: [
                    {
                        data: "movie.name"
                    },
                    {
                        data: "movie.genre.name"
                    },
                    {
                        data: "movie.rating",
                        render: function (data, type, movie) {
                            let star = "<span class='fa fa-star text-star'>";
                            if (data !== 0) {
                                return star.repeat(data);
                            } else {
                                return ""
                            }
                        }
                    },
                    {
                        data: "dateRented",
                        render: function (data, type, rental) {
                            return moment(data).format("MM/DD/YYYY")
                        }
                    },
                    {
                        data: "dateReturned",
                        render: function (data, type, rental) {
                            return moment(data).format("MM/DD/YYYY")
                        }
                    },
                ]
            });

            $("#rented").on("click", ".js-return", function () {
                var button = $(this);
                let svm = {
                    movieId: button.attr("data-movie-id"),
                    rentalId: rentalId
                }
                console.log(svm)
                $.ajax({
                    url: "/api/returnMovie",
                    method: "PUT",
                    data: svm,
                    success: function () {
                        rentedTable.row(button.parents("tr")).remove().draw();
                        historyTable.ajax.reload();
                    }
                })
            })

            $("#return").on("click", function () {
                var data = rentedTable.rows().data();

                for (var i = 0; i < data.length; i++) {
                    vm.movieIds.push(data[i].movieId)
                }

                $.ajax({
                    url: "/api/returnMovies",
                    method: "PUT",
                    data: vm,
                    success: function () {
                        toastr.success("Successfully return movies");
                        rentedTable.ajax.reload();
                        historyTable.ajax.reload();
                    }
                }).fail(function (response) {
                    toastr.error(response.responseJSON.message);
                });
            })


        })





    </script>

}

